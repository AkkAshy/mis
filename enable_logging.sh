#!/bin/bash

# üîß –ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–∫–∏ Surgery updated_at
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./quick_fix_surgery.sh

set -e

echo "üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–®–ò–ë–ö–ò: Surgery updated_at"
echo "========================================="
echo ""

GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

# –®–∞–≥ 1: –ë—ç–∫–∞–ø
echo "üì¶ –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞..."
if [ -f "app/models/surgery.py" ]; then
    cp app/models/surgery.py app/models/surgery.py.backup
    echo -e "${GREEN}‚úì –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω: app/models/surgery.py.backup${NC}"
else
    echo -e "${RED}‚úó –§–∞–π–ª app/models/surgery.py –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    exit 1
fi
echo ""

# –®–∞–≥ 2: –ó–∞–º–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∏ –≤ —Ñ–∞–π–ª–µ
echo "üîÑ –®–∞–≥ 2: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ Surgery..."

# –ò—Å–ø–æ–ª—å–∑—É–µ–º sed –¥–ª—è –∑–∞–º–µ–Ω—ã
sed -i.tmp 's/updated_at: Mapped\[DateTime\] = mapped_column(DateTime(timezone=True), onupdate=func.now())/updated_at: Mapped[DateTime] = mapped_column(DateTime(timezone=True), server_default=func.now(), onupdate=func.now())/' app/models/surgery.py

if [ $? -eq 0 ]; then
    rm app/models/surgery.py.tmp
    echo -e "${GREEN}‚úì –ú–æ–¥–µ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞${NC}"
else
    echo -e "${RED}‚úó –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –º–æ–¥–µ–ª—å${NC}"
    exit 1
fi
echo ""

# –®–∞–≥ 3: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏
echo "üóÑÔ∏è –®–∞–≥ 3: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –∫ –ë–î..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –º–∏–≥—Ä–∞—Ü–∏—è
if [ -f "alembic/versions/fix_surgery_updated_at.py" ]; then
    echo -e "${GREEN}‚úì –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞${NC}"
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
    alembic upgrade head
    
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úì –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞${NC}"
    else
        echo -e "${YELLOW}‚ö† –í–æ–∑–º–æ–∂–Ω–æ, –º–∏–≥—Ä–∞—Ü–∏—è —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞${NC}"
    fi
else
    echo -e "${RED}‚úó –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ alembic/versions/${NC}"
    echo "   –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª fix_surgery_updated_at.py –≤ alembic/versions/"
    exit 1
fi
echo ""

# –®–∞–≥ 4: Git
echo "üìù –®–∞–≥ 4: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∫–æ–º–º–∏—Ç—É..."
git add app/models/surgery.py

echo ""
echo -e "${GREEN}‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!${NC}"
echo ""
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "  1. –ó–∞–∫–æ–º–º–∏—Ç—å—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:"
echo -e "     ${YELLOW}git commit -m 'Fix: surgery updated_at field with server_default'${NC}"
echo ""
echo "  2. –ó–∞–¥–µ–ø–ª–æ–π—Ç–µ –Ω–∞ Vercel:"
echo -e "     ${YELLOW}git push origin main${NC}"
echo ""
echo "  3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é —Å–Ω–æ–≤–∞"
echo ""
echo "üí° –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ç–∫–∞—Ç–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è:"
echo -e "   ${YELLOW}cp app/models/surgery.py.backup app/models/surgery.py${NC}"
echo ""