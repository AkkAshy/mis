#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...\n")

try:
    from app.core.config import settings
    print(f"‚úÖ Config –∑–∞–≥—Ä—É–∂–µ–Ω")
    
    db_url = str(settings.database_url)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–º–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
    if "@" in db_url:
        parts = db_url.split("@")
        host_part = parts[1].split("/")[0] if "/" in parts[1] else parts[1]
        print(f"üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫: {host_part}")
    
    if "localhost" in db_url:
        print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è localhost!")
        print("   –°–æ–∑–¥–∞–π .env —Ñ–∞–π–ª —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º DATABASE_URL")
    elif "neon" in db_url:
        print("‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Neon PostgreSQL")
    
    print("\nüîå –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...")
    
    from app.db.session import engine
    from sqlalchemy import text
    
    with engine.connect() as conn:
        # –¢–µ—Å—Ç 1: –í–µ—Ä—Å–∏—è PostgreSQL
        result = conn.execute(text("SELECT version()"))
        version = result.fetchone()[0]
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ PostgreSQL!")
        print(f"   –í–µ—Ä—Å–∏—è: {version[:60]}...")
        
        # –¢–µ—Å—Ç 2: –°–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü
        result = conn.execute(text("""
            SELECT table_name 
            FROM information_schema.tables 
            WHERE table_schema = 'public'
            ORDER BY table_name
        """))
        tables = [row[0] for row in result.fetchall()]
        
        print(f"\nüìä –¢–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö ({len(tables)}):")
        if tables:
            for table in tables:
                # –°—á–∏—Ç–∞–µ–º –∑–∞–ø–∏—Å–∏
                count_result = conn.execute(text(f"SELECT COUNT(*) FROM {table}"))
                count = count_result.fetchone()[0]
                print(f"   - {table}: {count} –∑–∞–ø–∏—Å–µ–π")
        else:
            print("   ‚ö†Ô∏è  –¢–∞–±–ª–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (–±–∞–∑–∞ –ø—É—Å—Ç–∞—è)")
        
        # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ updated_at
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–æ–Ω–∫–∏ updated_at:")
        
        for table in ['appointments', 'patients']:
            try:
                result = conn.execute(text(f"""
                    SELECT column_name, data_type, column_default
                    FROM information_schema.columns
                    WHERE table_name = '{table}' AND column_name = 'updated_at'
                """))
                row = result.fetchone()
                if row:
                    print(f"   ‚úÖ {table}.updated_at —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ({row[1]})")
                else:
                    print(f"   ‚ùå {table}.updated_at –ù–ï –ù–ê–ô–î–ï–ù!")
            except:
                print(f"   ‚ö†Ô∏è  –¢–∞–±–ª–∏—Ü–∞ {table} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤
        print(f"\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤:")
        result = conn.execute(text("""
            SELECT trigger_name, event_object_table
            FROM information_schema.triggers
            WHERE event_object_table IN ('appointments', 'patients')
            ORDER BY event_object_table
        """))
        triggers = result.fetchall()
        
        if triggers:
            for trigger_name, table_name in triggers:
                print(f"   ‚úÖ {table_name}: {trigger_name}")
        else:
            print(f"   ‚ö†Ô∏è  –¢—Ä–∏–≥–≥–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (–Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å SQL —Å–∫—Ä–∏–ø—Ç)")
        
        print("\n" + "="*60)
        print("‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
        print("="*60)
        
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("\n–£—Å—Ç–∞–Ω–æ–≤–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:")
    print("   pip install sqlalchemy psycopg2-binary pydantic-settings")
    
except Exception as e:
    print(f"\n‚ùå –û–®–ò–ë–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø:")
    print(f"   {str(e)}")
    print("\nüîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("   1. –ü—Ä–æ–≤–µ—Ä—å —á—Ç–æ .env —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    print("   2. –ü—Ä–æ–≤–µ—Ä—å DATABASE_URL –≤ .env")
    print("   3. –ü—Ä–æ–≤–µ—Ä—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
    print("   4. –ü—Ä–æ–≤–µ—Ä—å —á—Ç–æ Neon –±–∞–∑–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")